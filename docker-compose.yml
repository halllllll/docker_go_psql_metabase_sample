version: "3.9"

volumes:
  db-data:
    driver: local
  metabase-data:
    driver: local
  apps-share-data:
    driver: local

services:
  go_app1:
    container_name: go_app1
    build:
      context: .
      dockerfile: "./docker/golang/Dockerfile"
    volumes:
      - "./go_apps/go_app1/:/go/src/app"
      - "apps-share-data:/go/src/app/shareTo"
    working_dir: /go/src/app
    depends_on:
      - db
    tty: true
    stdin_open: true
  go_app2:
    container_name: go_app2
    build:
      context: .
      dockerfile: "./docker/golang/Dockerfile"
    volumes:
      - "./go_apps/go_app2/:/go/src/app"
      - "apps-share-data:/go/src/app/shareFrom"
    working_dir: /go/src/app
    depends_on:
      - db
    tty: true
    stdin_open: true

  metabase:
    image: metabase/metabase
    container_name: "metabase"
    volumes:
      - "metabase-data:/metabase-data"
    environment:
      # MB_DB_FILE: /metabase-data/metabase.db
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: my-metabase
      MB_DB_PORT: 5432
      MB_DB_USER_FILE: /run/secrets/db_user
      MB_DB_PASS_FILE: /run/secrets/db_password
      MB_DB_HOST: db
      #   MB_DB_USER: postgres
      #   # MB_DB_PASS: metabase
      #   MB_DB_PASS: postgres
      #   # MB_DB_HOST: db
    ports:
      - "4946:3000"
    depends_on:
      - db
    platform: linux/amd64
    secrets:
      - db_password
      - db_user
    
  db:
    image: postgres:14-alpine
    container_name: "metabase-db"
    ports:
      - "5050:5432"
    env_file:
      - "./docker/postgres/.env"
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./docker/postgres/init:/docker-entrypoint-initdb.d"

secrets:
  db_password:
    file: secrets/db_password.txt
  db_user:
    file: secrets/db_user.txt